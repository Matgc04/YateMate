@page "/Account/Manage/ChangePassword"

@* @using System.ComponentModel.DataAnnotations *@
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using YateMate.Aplicacion.Entidades;


@inject UserManager<ApplicationUser> UserManager
@* @inject SignInManager<ApplicationUser> SignInManager *@
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@* @inject ILogger<ChangePassword> Logger *@
@inject AuthenticationStateProvider AuthenticationStateProvider

@inject NavigationManager NavigationManager
@inject IEmailSender<ApplicationUser> EmailSender

<PageTitle>Cambiar Contraseña</PageTitle>

<h3>Cambiar contraseña</h3>
@* <div class="row"> *@
@*     <p> Presiona el siguiente boton para restablecer tu contraseña</p> *@
@*     <p> Se enviara un email a @_emailUsuario </p> *@
@*     <div class="col-md-6"> *@
@*         <EditForm Model="Input" OnSubmit="OnValidSubmitAsync" FormName="change-password" method="post"> *@
@*         <button type="submit" class="w-100 btn btn-lg btn-primary">Cambiar contraseña</button> *@
@*         </EditForm> *@
@*     </div> *@
@* </div> *@

<div class="row">
    <div class="col-md-6">
        
        <EditForm Model="Input" FormName="change-password" OnValidSubmit="OnValidSubmitAsync" method="post">
            <InputText hidden="true" @bind-Value="Input.a"/>
            <button type="submit" class="w-100 btn btn-lg btn-primary">Solicitar Cambio</button>
        </EditForm>
    </div>
</div>

@code {

    [SupplyParameterFromForm] private InputModel Input { get; set; } = new();

    private sealed class InputModel
    {
        public string a { get; set; } = "";
    }
    
    // [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;
    // //usar esto esta desaconsejado por microsoft creo https://learn.microsoft.com/en-us/aspnet/core/fundamentals/http-context?view=aspnetcore-6.0
    
    //Lo podria usar para conseguir el Application user o capaz lo saco de repo no se, aca mando uno vacio porque aunq la interfaz lo pide no se usa
    //TODO: llamar a repo con emailUsuario y con eso llenar _user
    private ApplicationUser _user = default!; 
    private string? _emailUsuario;
    
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        _emailUsuario = authState.User.Identity?.Name;

        if (String.IsNullOrEmpty(_emailUsuario))
            throw new Exception("el email del usuario es null o vacio, no se que decirte");
        _user = await UserManager.FindByEmailAsync(_emailUsuario);
    }

    private async Task OnValidSubmitAsync()
    {
        var code = await UserManager.GeneratePasswordResetTokenAsync(_user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ResetPassword").AbsoluteUri,
            new Dictionary<string, object?> { ["code"] = code, ["email"] = _user.Email });
        Console.WriteLine($"La url para poner tu contrasenia es {callbackUrl}");
        
        await EmailSender.SendPasswordResetLinkAsync(_user, _user.Email, HtmlEncoder.Default.Encode(callbackUrl));
        
        RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
    }

    

}