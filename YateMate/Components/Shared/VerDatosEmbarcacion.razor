@using YateMate.Aplicacion.UseCases.ApplicationUser
@using YateMate.Aplicacion.UseCases.Embarcaciones
@using YateMate.Aplicacion.UseCases.Oferta
@using YateMate.Aplicacion.UseCases.Publicaciones
@inject NavigationManager Navegador;
@inject EliminarPublicacionUseCase EliminarPublicacion
@inject NavigationManager NavigationManager
@inject ObtenerEmbarcacionUseCase ObtenerEmbarcacion
@inject ObtenerDuenioUseCase ObtenerDuenio
@inject ObtenerContactosDeUseCase ObtenerContactosDeUseCase
@inject ObtenerOfertasAceptadasUseCase ObtenerOfertasAceptadas


<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6" Style="display: flex; justify-content: center; width: 100%;">
            Viendo datos
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudCard Style="box-shadow: none">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h4">@Publicacion.Titulo</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent Style="font-size: large">
                <MudText >@Publicacion.Descripcion</MudText>

                <MudSimpleTable>
                    <thead>
                    <tr>
                        
                    <th>Calado</th>
                    <th>Eslora</th>
                    <th>Manga</th>
                    </tr>
                    </thead>
                    <tbody>
                    <tr>
                        
                    <th>@(Original.Calado)'</th>
                    <th>@(Original.Eslora)'</th>
                    <th>@(Original.Manga)'</th>
                    </tr>
                    </tbody>
                </MudSimpleTable>
                <MudText>Bandera: @Original.Bandera</MudText>

                <MudImage Fluid="true" Src="@Publicacion.Image" Alt="Imagen de la publicación" Style="max-height: 300px;"/>
            </MudCardContent>
        </MudCard>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel" Style="margin-left: auto">Cerrar</MudButton>
        <div style="flex-grow: 1;"></div>
        @if (Duenio)
        {
            <MudButton Variant="Variant.Filled"
                       Href=""
                       StartIcon="@Icons.Material.Filled.Edit"
                       OnClick="@((e) => NavigationManager.NavigateTo("/publicar/"+Publicacion.EmbarcacionId))"
                       Color="Color.Primary"
                       Size="Size.Small">Editar
            </MudButton>
            @if (!ObtenerOfertasAceptadas.Ejecutar().Exists(o => o.PublicacionId == Publicacion.Id))
            {
                <MudButton Variant="Variant.Filled"
                           Href=""
                           StartIcon="@Icons.Material.Filled.Delete"
                           OnClick="EliminarHandler"
                           Color="Color.Error"
                           Size="Size.Small">Eliminar
                </MudButton>
            }
        }
        else
        {
            @if (!_contactos.Select(u => u.Id).Contains(ObtenerDuenio.Ejecutar(Publicacion)))
            {
                <MudButton Variant="Variant.Filled"
                           @onclick="@(() => Navegador.NavigateTo($"/chat/{ObtenerDuenio.Ejecutar(Publicacion)}"))"
                           Color="Color.Primary" StartIcon="@Icons.Material.Filled.ChatBubble"
                           Size="Size.Small"> Iniciar Conversación
                </MudButton>
            }

            <MudButton Variant="Variant.Filled"
                       Href=""
                       StartIcon="@Icons.Material.Filled.SyncAlt"
                       @onclick="@(() => NavigationManager.NavigateTo($"/ListarMisBienes/{Publicacion.Id.ToString()}/{ObtenerDuenio.Ejecutar(Publicacion)}"))"
                       Color="Color.Primary"
                       Size="Size.Small">Hacer Oferta
            </MudButton>
        }
    </DialogActions>
</MudDialog>

@code {
    [Parameter] public Publicacion Publicacion { get; set; } = null!;
    [Parameter] public bool Duenio { get; set; }=false;
    
    [CascadingParameter] 
    private Task<AuthenticationState>? AuthenticationState { get; set; }
    private string? _userId;
    List<ApplicationUser> _contactos = new List<ApplicationUser>();


    protected override async Task OnInitializedAsync()
    {
        if (AuthenticationState is not null)
        {
            var authState = await AuthenticationState;
            var user = authState.User;
            _userId = user.Claims.FirstOrDefault()?.Value;
            _contactos = ObtenerContactosDeUseCase.Ejecutar(_userId);
        }
    }
    
    [CascadingParameter] MudDialogInstance? MudDialog { get; set; }
    Embarcacion Original { get; set; } = null!;
    protected override void OnInitialized()
    {
        Original = ObtenerEmbarcacion.Ejecutar(Publicacion.EmbarcacionId);
    }

    void Submit() => MudDialog!.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog!.Cancel();
    void Editar(int id)
    {
        Submit();
        NavigationManager.NavigateTo($"publicacion/{id}");

    }

    public void EliminarHandler(object e)
    {
        EliminarPublicacion.Ejecutar(Publicacion);
        Navegador.NavigateTo("/mis_publicaciones", true);
    }
    
    public void HandleClickOferta(string id)
    {
        Navegador.NavigateTo($"/ListarMisBienes/{id}");
    }

}

