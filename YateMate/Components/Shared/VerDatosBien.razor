@using YateMate.Aplicacion.UseCases.ApplicationUser
@using YateMate.Aplicacion.UseCases.Oferta
@using YateMate.Aplicacion.UseCases.Publicaciones
@inject NavigationManager NavigationManager
@inject ObtenerContactosDeUseCase ObtenerContactosDeUseCase
@inject AceptarOfertaUseCase AceptarOferta
@inject EliminarOfertaUseCase EliminarOferta
@inject EmailSender EmailSender
@inject ObtenerApplicationUserUseCase ObtenerApplicationUserUseCase
@inject ObtenerPublicacionDeUseCase ObtenerPublicacion

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6" Style="display: flex; justify-content: center; width: 100%;">
            Viendo datos
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">@Bien!.Nombre</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudImage Fluid="true" Src="@Bien!.Imagen" Alt="Image"/>
                <MudText>@Bien.Descripcion</MudText>
            </MudCardContent>
        </MudCard>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel" Style="margin-left: auto">Cerrar</MudButton>
        <div style="flex-grow: 1;"></div>
        @if (Duenio)
        {
            <MudButton Variant="Variant.Filled"
                       Href=""
                       StartIcon="@Icons.Material.Filled.Edit"
                       OnClick="@((e) => Editar(Bien!.Id))"
                       Color="Color.Primary"
                       Size="Size.Small">Editar
            </MudButton>
        }
        else if(oferta!=null)
        {
            <MudButton Variant="Variant.Filled"
                       Href=""
                       StartIcon="@Icons.Material.Filled.Clear"
                       OnClick="HandlerRechazar"
                       Color="Color.Warning"
                       Size="Size.Small">Rechazar oferta
            </MudButton> 
            <MudButton Variant="Variant.Filled"
                       Href=""
                       StartIcon="@Icons.Material.Filled.Check"
                       OnClick="HandlerAceptar"
                       Color="Color.Primary"
                       Size="Size.Small">Aceptar oferta
            </MudButton> 
        }
        @if(!_contactos.Select(u=> u.Id).Contains(Bien.UsuarioId))
        {
        <MudButton Variant="Variant.Filled"
                   @onclick="@(() => NavigationManager.NavigateTo($"/chat/{Bien.UsuarioId}"))"
                   Color="Color.Primary" StartIcon="@Icons.Material.Filled.ChatBubble"
                   Size="Size.Small"> Iniciar Conversaci√≥n
        </MudButton>
        }
    </DialogActions>
</MudDialog>

@code {
    [Parameter] public Bien Bien { get; set; } = null!;
    [Parameter] public bool Duenio { get; set; }
    [Parameter] public Oferta? oferta { get; set; }
    [CascadingParameter] 
    private Task<AuthenticationState>? AuthenticationState { get; set; }
    private string? _userId;
    List<ApplicationUser> _contactos = new List<ApplicationUser>();


    protected override async Task OnInitializedAsync()
    {
        if (AuthenticationState is not null)
        {
            var authState = await AuthenticationState;
            var user = authState.User;
            _userId = user.Claims.FirstOrDefault()?.Value;
            _contactos = ObtenerContactosDeUseCase.Ejecutar(_userId);
        }
    }
    
    [CascadingParameter] MudDialogInstance? MudDialog { get; set; }

    void Submit() => MudDialog!.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog!.Cancel();
    void Editar(int id)
    {
        Submit();
        NavigationManager.NavigateTo($"bien/{id}");

    }

    void HandlerRechazar()
    {
        EliminarOferta.Ejecutar(oferta.Id);
        NavigationManager.NavigateTo($"listadoOfertas/{oferta.PublicacionId}", true);
    }
    async Task HandlerAceptar()
    {
        AceptarOferta.Ejecutar(oferta);
        var duenio = ObtenerApplicationUserUseCase.Ejecutar(oferta.UsuarioId);
        var pub = ObtenerPublicacion.Ejecutar(oferta.PublicacionId);
        await EmailSender.SendMessageAceptacion(duenio.Email, Bien,pub );
        NavigationManager.NavigateTo($"mis_publicaciones");
    }

}