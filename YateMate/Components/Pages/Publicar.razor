@page "/publicar/{Id:int}"
@rendermode InteractiveServer
@inject PublicarEmbarcacionUseCase PublicarEmbarcacion
@inject NavigationManager Navegador;

    <EditForm OnSubmit="OnValidSubmit" Model="Model" Enhance>
        <MudCard>
            <MudCardContent>
                <MudTextField HelperText="Titulo de la Publicacion"
                              @bind-Value="Model.Titulo" For="@(() => Model.Titulo)" Required="true"/>
                <MudTextField T="string" HelperText="Descripcion de la Embarcacion" Variant="Variant.Text" Text="@Model.Descripcion" @bind-Value="Model.Descripcion" AutoGrow Lines="4" Required="true"/>
                @if (@Model.Image != "")
                {
                    <MudImage src="@Model.Image" Style="width: 100%"></MudImage>
                }
                <MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles" Context="EditButtonContext" Required="true" Accept="image/jpeg, image/jpg, image/png, image/webp" >
                    <ButtonTemplate >
                        <MudButton HtmlTag="label"
                                   Variant="Variant.Filled"
                                   Color="Color.Primary"
                                   StartIcon="@Icons.Material.Filled.CloudUpload"
                                   for="@EditButtonContext.Id"
                                   >
                            Subir imagen
                        </MudButton>
                    </ButtonTemplate>
                </MudFileUpload>
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Publicar</MudButton>
            </MudCardActions>
        </MudCard>
    </EditForm>

@code
{
    [Parameter] public int Id { get; set; }
    [SupplyParameterFromForm]
    public Publicacion Model { get; set; }= new ("", "","", 0);
    
    private async Task UploadFiles(IBrowserFile file)
    {
            var buffer = new byte[file.Size];
            var reader = file.OpenReadStream(long.MaxValue);
            await reader.ReadExactlyAsync(buffer);
            var imagesrc = Convert.ToBase64String(buffer);
            reader.Close();
            Model.Image = $"data:{file.ContentType};base64,{imagesrc}";
    }
    
    public void OnValidSubmit()
    {
        Model.EmbarcacionId = Id;
        PublicarEmbarcacion.Ejecutar(Model);
        Navegador.NavigateTo("embarcaciones");
    }
}
