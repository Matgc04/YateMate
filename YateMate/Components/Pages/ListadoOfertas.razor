@page "/ListadoOfertas/{Id:int?}"

@rendermode InteractiveServer
@using YateMate.Aplicacion.UseCases.Bien
@using YateMate.Components.Shared
@using YateMate.Aplicacion.UseCases.Oferta
@* @inject IdentityUserAccessor UserAccessor; *@
@inject ObtenerBienUseCase ObtenerBienUseCase
@inject NavigationManager Navegador;
@inject ListarOfertasDeUseCase ListarOfertasDeUseCase
@inject IDialogService Dialog

<MudDialogProvider  FullWidth="true"
                    MaxWidth="MaxWidth.Small"
                    Position="DialogPosition.CenterLeft"/>

<h1>Listado Ofertas</h1>
<title>Ofertas</title>

@if (!_tieneElementos)
{
    <h2>Esta embarcación no tiene ofertas.</h2>
}
else
{

    <MudPaper Width="100%" Class="darkbackground" MinHeight="350" Style="border: none; box-shadow: none;"> 
        <MudContainer>
            <MudGrid>
                @foreach (var oferta in _lista)
                {
                    var bien = ObtenerBienUseCase.Ejecutar(oferta.BienId);
                    <MudItem xs="4" Style="display:flex;">
                        <MudPaper Width="100%" Square="false" Class="pa-10 ma-2 infobox" Style="border: none; box-shadow: none;">
                            <MudCard>
                                <MudCardMedia Image=@bien.Imagen Height="200" Style="object-fit: contain;" />
                                <MudCardContent Style="min-height: 100px">
                                    <MudText Typo="Typo.h5" Style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">@bien.Nombre</MudText>
                                    <MudText Typo="Typo.body2" Style="overflow: hidden; text-overflow: ellipsis; display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical;">@bien.Descripcion</MudText>
                                </MudCardContent>
                                <MudCardActions Style="justify-content: space-between;">
                                    <MudButton Variant="Variant.Text" @onclick="@((e) => OpenDialog(bien))" Color="Color.Primary">Ver más</MudButton>
                                    @* <MudButton Variant="Variant.Text" OnClick="() => Eliminar(bien)" StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error"> Borrar </MudButton> *@
                                </MudCardActions>
                            </MudCard>
                        </MudPaper>
                    </MudItem>
                }
            </MudGrid>
        </MudContainer>
    </MudPaper>

}

@code {
    [Parameter] public int? Id { get; set; }
    List<Oferta> _lista = new List<Oferta>();
    Oferta? _ofertaParaEliminar;
    bool _tieneElementos;
    
    protected override void OnInitialized()
    {
        _lista = ListarOfertasDeUseCase.Ejecutar(Id.Value);
    }
    
    protected override void OnParametersSet()
    {
        if(_lista.Count > 0)
        {
            _tieneElementos = true;
        }
    }

    // private void Eliminar(Bien oferta)
    // {
    //     _ofertaParaEliminar = oferta;
    //     EliminarBienUseCase.Ejecutar(_ofertaParaEliminar.Id);
    //     _lista = ListarBienesDeUseCase.Ejecutar(_userId!);
    //     if (_lista.Count == 0)
    //         _tieneElementos = false;
    // }
    //
    // private void Ofertar(Bien oferta)
    // {
    //     var oferta = new Oferta(oferta.Id,int.Parse(Origen!));
    //     HacerOfertaUseCase.Ejecutar(oferta);
    //     Navegador.NavigateTo($"/ListadoPublicacionesDisponibles");
    // }

    private void OpenDialog(Bien oferta)
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        var parameters = new DialogParameters<VerDatosBien>();
        parameters.Add(x => x.Bien, oferta);
        Dialog.Show<VerDatosBien>("Ver Datos", parameters);
    }
}