@page "/admin"
@using Microsoft.AspNetCore.Identity
@using YateMate.Aplicacion.UseCases.ApplicationUser

@inject ObtenerEmpleadosUseCase ObtenerEmpleadosUseCase;
@inject EliminarApplicationUserUseCase EliminarApplicationUserUseCase
@* @inject UserManager<ApplicationUser> UserManager le agrego el rol desde aca ya fue*@ 
@inject NavigationManager NavigationManager


<h3>Admin</h3>
    @if (!_tieneElementos) {
        <p>No hay empleados para mostrar</p>
    } 
    else 
    {
        <table id="table" class="table">
        <thead>
        <tr>
            <th>EMAIL</th>
            <th>NOMBRE</th>
            <th>APELLIDO</th>
            <th>NACIONALIDAD</th>
            <th>GENERO</th>
            <th>DNI</th>
            <th>FECHA DE NACIMIENTO</th>
            <th>ACCIÃ“N</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var empleado in _lista)
            {
                
                <tr>
                    <td>@empleado.Email</td>
                    <td>@empleado.Nombre</td>
                    <td>@empleado.Apellido</td>
                    <td>@empleado.Nacionalidad</td>
                    <td>@empleado.Genero</td>
                    <td>@empleado.Dni</td>
                    <td>@empleado.FechaNacimiento</td>
                    <td>
                        <div class="row">
                            <div class="col-md-6">
                                <EditForm Model="Input" FormName="@($"Eliminar-cliente-{empleado.Id}")" OnValidSubmit="() => EliminarApplicationUser(empleado)" method="post">
                                    <InputText hidden="true" @bind-Value="Input.a"/>
                    <button type="submit" class="w-200 btn btn-lg btn-primary">Eliminar</button>
                    </EditForm>
                    </div>
                    </div>
                    </td>
                    </tr>
                    
            }
        </tbody>
        </table>
    }



    @code {
        
    [SupplyParameterFromForm] private InputModel Input { get; set; } = new();

    private sealed class InputModel
    {
        public string a { get; set; } = "";
    }

    List<ApplicationUser> _lista = new List<ApplicationUser>();
    bool _tieneElementos = false;

    protected override void OnInitialized()
    {
        _lista = ObtenerEmpleadosUseCase.Ejecutar();
    }
    protected override void OnParametersSet()
    {
        if(_lista.Count > 0) 
        {
            _tieneElementos = true;
        }
    }

    ApplicationUser? _userAEliminar = null;
    private void EliminarApplicationUser(ApplicationUser user)
    {
        _userAEliminar = user;
        EliminarApplicationUserUseCase.Ejecutar(_userAEliminar.Id);
        _lista = ObtenerEmpleadosUseCase.Ejecutar();
        
        if(_lista.Count == 0) 
        {
            NavigationManager.NavigateTo("/admin", forceLoad:true); //esto es una negrada, es para que haga refresh la pagina y q se actualice
        }
        
    }
    
}