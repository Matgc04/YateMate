@page "/admin"
@using Microsoft.AspNetCore.Identity
@using YateMate.Aplicacion.UseCases.ApplicationUser
@using YateMate.Components.Account.Shared

@inject ObtenerEmpleadosUseCase ObtenerEmpleadosUseCase;
@inject EliminarApplicationUserUseCase EliminarApplicationUserUseCase
@* @inject UserManager<ApplicationUser> UserManager le agrego el rol desde aca ya fue*@

@rendermode InteractiveServer

<DialogoConfirmacion @ref="dialogo" OnConfirmado="EliminarApplicationUser" />

<h3>Admin</h3>
    @if (!_tieneElementos) {
        <p>No hay empleados para mostrar</p>
    } 
    else 
    {
        <table id="table" class="table">
        <thead>
        <tr>
            <th>EMAIL</th>
            <th>NOMBRE</th>
            <th>APELLIDO</th>
            <th>NACIONALIDAD</th>
            <th>GENERO</th>
            <th>DNI</th>
            <th>FECHA DE NACIMIENTO</th>
            <th>ACCIÃ“N</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var empleado in _lista)
            {
                
                <tr>
                    <td>@empleado.Email</td>
                    <td>@empleado.Nombre</td>
                    <td>@empleado.Apellido</td>
                    <td>@empleado.Nacionalidad</td>
                    <td>@empleado.Genero</td>
                    <td>@empleado.Dni</td>
                    <td>@empleado.FechaNacimiento</td>
                    <td>
                        <div class="row">
                            <div class="col-md-6">
                                <EditForm Model="new()" FormName="@($"Eliminar-cliente-{empleado.Id}")" OnValidSubmit="() => ConfirmarEliminacion(empleado)" method="post">
                                    <button type="submit" class="w-200 btn btn-lg btn-primary">Eliminar</button>
                                </EditForm>
                            </div>
                        </div>
                    </td>
                </tr>
                    
            }
        </tbody>
        </table>
    }



    @code {
        
        
    List<ApplicationUser> _lista = new();
    bool _tieneElementos = false;

    protected override void OnInitialized()
    {
        _lista = ObtenerEmpleadosUseCase.Ejecutar();
    }
    protected override void OnParametersSet()
    {
        if(_lista.Count > 0) 
        {
            _tieneElementos = true;
        }
    }

    DialogoConfirmacion dialogo = null!;
    void ConfirmarEliminacion(ApplicationUser user)
    {
        _userAEliminar = user;
        dialogo.Mensaje = $"Deseas eliminar al empleado {user.Nombre} ?";
        dialogo.Mostrar();
    }

    ApplicationUser? _userAEliminar = null;
    private void EliminarApplicationUser()
    {
        EliminarApplicationUserUseCase.Ejecutar(_userAEliminar.Id);
        _lista = ObtenerEmpleadosUseCase.Ejecutar();
        
        if(_lista.Count == 0)
        {
            _tieneElementos = false;
        }
        
    }
    
}