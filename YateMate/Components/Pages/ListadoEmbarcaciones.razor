@page "/listadoembarcaciones/{Id}"
@using YateMate.Aplicacion.UseCases.Embarcaciones
@inject ObtenerEmbarcacionesDeUseCase ObtenerEmbarcacionesDeUseCase
@inject ModificarEmbarcacionUseCase ModificarEmbarcacionUseCase
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<MudContainer>
    <h3>Listado de embarcaciones</h3>

    @if (!_tieneElementos)
    {
    <MudText Typo="Typo.h6">No hay elementos</MudText>
    }
    else
    {
    <MudTable Items="_lista" Class="mt-4" Dense="true" Outlined="true">
        <HeaderContent>
            <MudTh>NOMBRE</MudTh>
            <MudTh>ESLORA</MudTh>
            <MudTh>CALADO</MudTh>
            <MudTh>ACCIÓN</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>
                @context.Nombre
            </MudTd>
            <MudTd>
                @context.Eslora
            </MudTd>
            <MudTd>
                @context.Calado
            </MudTd>
            <MudTd>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => MostrarFormularioEdicion(context))">Modificar</MudButton>
            </MudTd>
        </RowTemplate>
    </MudTable>

    @if (_mostrandoFormularioEdicion)
    {
    <div>
        <h3>Modificar Embarcación</h3>
        <MudTextField Label="Nombre" @bind-Value="_embarcacionAModificar!.Nombre" />
        <MudNumericField Label="Eslora" @bind-Value="_embarcacionAModificar!.Eslora" />
        <MudNumericField Label="Calado" @bind-Value="_embarcacionAModificar!.Calado" />
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => ModificarEmbarcacion(_embarcacionAModificar!))">Guardar</MudButton>
    </div>
    }
    }
</MudContainer>
@code {
    [Parameter] public string Id { get; set; } = null!;

    List<Embarcacion> _lista = new List<Embarcacion>();
    bool _tieneElementos = false;
    protected override void OnInitialized()
    {
        string clienteId = Id;
        _lista = ObtenerEmbarcacionesDeUseCase.Ejecutar(clienteId);
    }

    protected override void OnParametersSet() => _tieneElementos = _lista.Count > 0;

    Embarcacion? _embarcacionAModificar;
    bool _mostrandoFormularioEdicion = false;
    void MostrarFormularioEdicion(Embarcacion embarcacion)
    {
        _embarcacionAModificar = embarcacion;
        _mostrandoFormularioEdicion = true;
    }
    public void ModificarEmbarcacion(Embarcacion embarcacion)
    {
        ModificarEmbarcacionUseCase.Ejecutar(embarcacion);
        _mostrandoFormularioEdicion = false;
        NavigationManager.Refresh();
    }
    
    
}