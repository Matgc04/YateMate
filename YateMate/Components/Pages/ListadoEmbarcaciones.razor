@page "/listadoembarcaciones/{Id:int?}"
@using YateMate.Aplicacion.UseCases.Embarcaciones
@inject ObtenerEmbarcacionesDeUseCase ObtenerEmbarcacionesDeUseCase
@inject ModificarEmbarcacionUseCase ModificarEmbarcacionUseCase
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
<h3>Listado de embarcaciones</h3>

    @if (!_tieneElementos) 
    {
        <p>No hay elementos</p>
    }
    else
    {
        <table id="table" class="table">    
            <thead>
            <tr>
                <th>NOMBRE</th>
                <th>ESLORA</th>
                <th>CALADO</th>
                <th>ACCIÓN</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var embarcacion in _lista)
            {
                <tr>
                    <td>@embarcacion.Nombre</td>
                    <td>@embarcacion.Eslora</td>
                    <td>@embarcacion.Calado</td>
                    <td>
                        <div class="row">
                            <div class="col-md-6">
                                <EditForm Model="new()" FormName="@($"Mostrar-formulario-{embarcacion.Id}")" OnValidSubmit="() => MostrarFormularioEdicion(embarcacion)" method="post">
                                    <button type="submit" class="btn btn-lg btn-primary btn-block">Modificar</button>
                                </EditForm>
                            </div>
                        </div>
                    </td>
                </tr>
            }
            </tbody>
        </table>
        @if (_mostrandoFormularioEdicion)
        {
            <div>
                <h3>Modificar Embarcación</h3>
                <input type="text" @bind="_embarcacionAModificar.Nombre" />
                <input type="number" step="0.1" @bind="_embarcacionAModificar.Eslora" />
                <input type="number" step="0.1" @bind="_embarcacionAModificar.Calado" />
                <div class="row">
                    <div class="col-md-6">
                        <EditForm Model="new()" FormName="@($"Modificar-embarcacion-{_embarcacionAModificar.Id}")" OnValidSubmit="() => ModificarEmbarcacion(_embarcacionAModificar)" method="post">
                            <button type="submit" class="btn btn-lg btn-primary btn-block">Guardar</button>
                        </EditForm>
                    </div>
                </div>
            </div>
        }
    }
@code {
    [Parameter] public int Id { get; set; }
    
    List<Embarcacion> _lista = new List<Embarcacion>();
    bool _tieneElementos = false;
    protected override void OnInitialized()
    {
        string clienteId = Id.ToString();
        _lista = ObtenerEmbarcacionesDeUseCase.Ejecutar(clienteId);
    }

    protected override void OnParametersSet() => _tieneElementos = _lista.Count > 0;

    Embarcacion? _embarcacionAModificar;
    bool _mostrandoFormularioEdicion = false;
    void MostrarFormularioEdicion(Embarcacion embarcacion)
    {
        _embarcacionAModificar = embarcacion;
        _mostrandoFormularioEdicion = true;
    }
    public void ModificarEmbarcacion(Embarcacion embarcacion)
    {
        ModificarEmbarcacionUseCase.Ejecutar(embarcacion);
        _mostrandoFormularioEdicion = false;
        StateHasChanged();
        NavigationManager.Refresh(true);
    }
    
    
}